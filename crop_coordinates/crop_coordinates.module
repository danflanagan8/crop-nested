<?php

/**
 * Implements hook_form_alter.
 */
function crop_coordinates_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
  if( $form_id == 'node_article_edit_form'){
    $form['#validate'][] = 'crop_coordinates_nested';
  }
}

function crop_coordinates_nested(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
  $images = $form_state->getValue('field_image');

  foreach ($images as $image) {
    $crops = $image['image_crop']['crop_wrapper'];
    $featured = $crops['featured']['crop_container']['values'];
    $thumb = $crops['thumb']['crop_container']['values'];

    if($featured['crop_applied'] == 0){
      $form_state->setErrorByName('field_image', t('Please select a Featured crop.'));
    }
    if($thumb['crop_applied'] == 0){
      $form_state->setErrorByName('field_image', t('Please select a Thumb crop.'));
    }

    if($thumb['x'] < $featured['x']){
      $form_state->setErrorByName('field_image', t('Thumb crop must be nested inside Featured crop.'));
      continue;
    }
    if($thumb['y'] < $featured['y']){
      $form_state->setErrorByName('field_image', t('Thumb crop must be nested inside Featured crop.'));
      continue;
    }
    if($thumb['x'] + $thumb['width'] > $featured['x'] + $featured['width']){
      $form_state->setErrorByName('field_image', t('Thumb crop must be nested inside Featured crop.'));
      continue;
    }
    if($thumb['y'] + $thumb['height'] > $featured['y'] + $featured['height']){
      $form_state->setErrorByName('field_image', t('Thumb crop must be nested inside Featured crop.'));
      continue;
    }
  }
}
